server:
  port: 8087
  
spring:
  profiles:
    active: dev
  data:
    mongodb:
      auto-index-creation: true
      #uri: mongodb://host.docker.internal:27017/
      uri: mongodb://localhost:27017/
      database: card-service
      auditing:
          enabled: true 
  cloud:
    eureka:
      client:
        serviceUrl:
          defaultZone: http://localhost:8761/eureka/ 
          #defaultZone: http://host.docker.internal:8761/eureka/
        fetchRegistry: true 
        registerWithEureka: true  
        enabled: true
        
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    properties:
      security:
        protocol: PLAINTEXT
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret"

resilience4j:
  circuitbreaker:
    configs:
      default:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        eventConsumerBufferSize: 10
        registerHealthIndicator: true
    instances:
      card-service:
        baseConfig: default
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 1s
    instances:
      card-service:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 2s
        cancelRunningFuture: true
    instances:
      card-service:
        baseConfig: default

feign:
  client:
    config:
      transaction-service:
        url: http://localhost:8083
      account-service:
        url: http://localhost:8081